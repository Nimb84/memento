// <auto-generated />
using System;
using Grocery.EFDataAccess;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace Grocery.EFDataAccess.Migrations
{
	[DbContext(typeof(GroceryContext))]
	[Migration("20190506192200_InitialCreate")]
	partial class InitialCreate
	{
		protected override void BuildTargetModel(ModelBuilder modelBuilder)
		{
#pragma warning disable 612, 618
			modelBuilder
					.HasAnnotation("ProductVersion", "2.1.8-servicing-32085")
					.HasAnnotation("Relational:MaxIdentifierLength", 128)
					.HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

			modelBuilder.Entity("Grocery.EFDataAccess.Entity.GroceryItem", b =>
					{
						b.Property<Guid>("Id")
											.ValueGeneratedOnAdd();

						b.Property<string>("Comment");

						b.Property<DateTime>("CreateDate");

						b.Property<Guid>("GroceryListId");

						b.Property<bool>("IsBooked");

						b.Property<Guid?>("MemberId");

						b.Property<decimal>("Price")
											.HasColumnType("decimal(5, 2)");

						b.Property<int>("Priority");

						b.Property<Guid>("ProductId");

						b.Property<int>("Progress");

						b.Property<int>("Units");

						b.HasKey("Id");

						b.HasIndex("GroceryListId");

						b.HasIndex("Id")
											.IsUnique();

						b.HasIndex("MemberId");

						b.HasIndex("ProductId");

						b.ToTable("GroceryItem");
					});

			modelBuilder.Entity("Grocery.EFDataAccess.Entity.GroceryList", b =>
					{
						b.Property<Guid>("Id")
											.ValueGeneratedOnAdd();

						b.Property<DateTime>("CreateDate");

						b.Property<Guid>("CreatorId");

						b.Property<string>("Description");

						b.Property<string>("Title");

						b.Property<decimal?>("TotalPrice")
											.HasColumnType("decimal(5, 2)");

						b.Property<int>("Type");

						b.HasKey("Id");

						b.HasIndex("Id")
											.IsUnique();

						b.ToTable("GroceryList");
					});

			modelBuilder.Entity("Grocery.EFDataAccess.Entity.Member", b =>
					{
						b.Property<Guid>("Id")
											.ValueGeneratedOnAdd();

						b.Property<DateTime>("CreateDate");

						b.Property<Guid>("IdentityMemberId");

						b.Property<string>("Name");

						b.HasKey("Id");

						b.HasIndex("Id")
											.IsUnique();

						b.ToTable("Member");
					});

			modelBuilder.Entity("Grocery.EFDataAccess.Entity.MemberGroceryList", b =>
					{
						b.Property<Guid>("MemberId");

						b.Property<Guid>("GroceryListId");

						b.Property<int>("Access");

						b.Property<DateTime>("CreateDate");

						b.Property<Guid>("Id");

						b.HasKey("MemberId", "GroceryListId");

						b.HasIndex("GroceryListId");

						b.HasIndex("Id")
											.IsUnique();

						b.ToTable("MemberGroceryList");
					});

			modelBuilder.Entity("Grocery.EFDataAccess.Entity.Product", b =>
					{
						b.Property<Guid>("Id")
											.ValueGeneratedOnAdd();

						b.Property<DateTime>("CreateDate");

						b.Property<Guid?>("CreatorId");

						b.Property<string>("Decription");

						b.Property<decimal>("DefaultPrice")
											.HasColumnType("decimal(5, 2)");

						b.Property<decimal>("DefaultUnits")
											.HasColumnType("decimal(5, 2)");

						b.Property<string>("Name");

						b.Property<int>("Type");

						b.Property<int>("UnitType");

						b.HasKey("Id");

						b.HasIndex("CreatorId");

						b.HasIndex("Id")
											.IsUnique();

						b.ToTable("Product");
					});

			modelBuilder.Entity("Grocery.EFDataAccess.Entity.GroceryItem", b =>
					{
						b.HasOne("Grocery.EFDataAccess.Entity.GroceryList", "List")
											.WithMany("Items")
											.HasForeignKey("GroceryListId")
											.OnDelete(DeleteBehavior.Restrict);

						b.HasOne("Grocery.EFDataAccess.Entity.Member", "Member")
											.WithMany("GroceryItems")
											.HasForeignKey("MemberId")
											.OnDelete(DeleteBehavior.Restrict);

						b.HasOne("Grocery.EFDataAccess.Entity.Product", "Product")
											.WithMany("GroceryItems")
											.HasForeignKey("ProductId")
											.OnDelete(DeleteBehavior.Restrict);
					});

			modelBuilder.Entity("Grocery.EFDataAccess.Entity.MemberGroceryList", b =>
					{
						b.HasOne("Grocery.EFDataAccess.Entity.GroceryList", "GroceryList")
											.WithMany("Members")
											.HasForeignKey("GroceryListId")
											.OnDelete(DeleteBehavior.Restrict);

						b.HasOne("Grocery.EFDataAccess.Entity.Member", "Member")
											.WithMany("Lists")
											.HasForeignKey("MemberId")
											.OnDelete(DeleteBehavior.Restrict);
					});

			modelBuilder.Entity("Grocery.EFDataAccess.Entity.Product", b =>
					{
						b.HasOne("Grocery.EFDataAccess.Entity.Member", "Creator")
											.WithMany("Products")
											.HasForeignKey("CreatorId")
											.OnDelete(DeleteBehavior.Restrict);
					});
#pragma warning restore 612, 618
		}
	}
}
